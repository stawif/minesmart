{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/minesmart/frontend/src/components/entry/MachineSupplyEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport './entry.css';\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nexport default class MachineSupplyEntry extends React.Component {\n  //Fetching Products from database\n  // Check existence of party name\n  //Check Existance of Material Names\n  //Form Handler\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machineparty/\");\n        const jsonMachineList = await responseMachineList.json();\n        const responseMaterialList = await fetch(\"http://127.0.0.1:8000/list-of-material/\");\n        const jsonMaterialList = await responseMaterialList.json();\n\n        if (jsonMachineList.length > 0 && jsonMaterialList.length > 0) {\n          jsonMachineList.map(item => this.setState({\n            partyNamesFromApi: [...this.state.partyNamesFromApi, item.name]\n          }));\n          this.state.materialNamesFromApi = [];\n          jsonMaterialList.map(item => this.setState({\n            materialNamesFromApi: [...this.state.materialNamesFromApi, item.name]\n          }));\n          this.setState({\n            selectedMaterial: this.state.materialNamesFromApi[0]\n          });\n        } else {\n          this.toggleLoadStatus();\n        }\n      } catch {}\n    };\n\n    this.checkParty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.checkMaterial = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.materialNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-machine-supply/\", {\n        party: this.state.selectedParty,\n        material: this.state.selectedMaterial,\n        date: this.state.date,\n        quantity: this.state.quantity,\n        drilling_feet: this.state.drillingfeet\n      }).then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.display === \"block\") {\n        await this.setState({\n          loadingStatus: {\n            display: \"none\"\n          },\n          loadedStatus: {\n            display: \"block\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            display: \"block\"\n          },\n          loadedStatus: {\n            display: \"none\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      materialNamesFromApi: [],\n      drillingfeet: 0,\n      date: null,\n      selectedParty: \"\",\n      selectedMaterial: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        display: \"block\"\n      },\n      loadedStatus: {\n        display: \"none\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkParty = this.checkParty.bind(this);\n    this.checkMaterial = this.checkMaterial.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: this.state.loadingStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"There is no machine party or material\"), React.createElement(\"div\", {\n      style: this.state.loadedStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"Machine Supply Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedParty = dataFromChild;\n      },\n      checkFromParent: this.checkParty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: e => this.state.selectedMaterial = e.target.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, this.state.materialNamesFromApi.map(item => React.createElement(\"option\", {\n      value: item,\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, item))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Drilling Feet\",\n      callbackFromParent: dataFromChild => {\n        this.state.drillingfeet = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Quantity\",\n      callbackFromParent: dataFromChild => {\n        this.state.quantity = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/minesmart/frontend/src/components/entry/MachineSupplyEntry.js"],"names":["React","axios","Autocomplete","InputDateField","InputQuantityField","MachineSupplyEntry","Component","constructor","props","fetchProduct","responseMachineList","fetch","jsonMachineList","json","responseMaterialList","jsonMaterialList","length","map","item","setState","partyNamesFromApi","state","name","materialNamesFromApi","selectedMaterial","toggleLoadStatus","checkParty","dataFromChild","responseMessage","buttonStatus","visibility","showList","index","toLowerCase","forEach","err","checkMaterial","onSubmit","e","post","party","selectedParty","material","date","quantity","drilling_feet","drillingfeet","then","res","data","catch","error","alert","response","request","_response","target","reset","preventDefault","loadingStatus","display","loadedStatus","bind","componentDidMount","render","partyExistMessage","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport './entry.css';\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nexport default class MachineSupplyEntry extends React.Component {\n  //Fetching Products from database\n  fetchProduct = async () => {\n    try {\n      const responseMachineList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machineparty/\"\n      );\n      const jsonMachineList = await responseMachineList.json();\n\n      const responseMaterialList = await fetch(\n        \"http://127.0.0.1:8000/list-of-material/\"\n      );\n      const jsonMaterialList = await responseMaterialList.json();\n      \n      if(jsonMachineList.length > 0 && jsonMaterialList.length > 0){\n        jsonMachineList.map(item =>\n          this.setState({\n            partyNamesFromApi: [...this.state.partyNamesFromApi, item.name]\n          }) \n        );\n        \n        this.state.materialNamesFromApi= [];\n        jsonMaterialList.map(item =>\n          this.setState({ \n            materialNamesFromApi: [...this.state.materialNamesFromApi, item.name] \n          })\n        );\n\n        this.setState({\n          selectedMaterial: this.state.materialNamesFromApi[0]\n        });\n      }\n      else{\n        this.toggleLoadStatus();\n      }\n    } \n    catch {}\n  };\n\n  // Check existence of party name\n  checkParty = dataFromChild => {\n    try {\n      this.setState({\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      const showList = (item, index) => {\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n          this.setState({\n            buttonStatus: {\n              visibility: \"visible\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.partyNamesFromApi.forEach(showList);\n    } catch (err) {}\n  };\n\n  //Check Existance of Material Names\n  checkMaterial = dataFromChild => {\n    try {\n      this.setState({\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      const showList = (item, index) => {\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n          this.setState({\n            buttonStatus: {\n              visibility: \"visible\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.materialNamesFromApi.forEach(showList);\n    } catch (err) {}\n  };\n\n  //Form Handler\n  onSubmit = e => {\n    axios\n      .post(\"http://127.0.0.1:8000/enter-machine-supply/\", {\n        party: this.state.selectedParty,\n        material: this.state.selectedMaterial,\n        date: this.state.date,\n        quantity: this.state.quantity,\n        drilling_feet: this.state.drillingfeet\n      })\n      .then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      })\n      .catch(error => {\n        alert(error.response.request._response);\n      });\n    e.target.reset();\n    e.preventDefault();\n  };\n\n  // toggle load status\n  toggleLoadStatus = async () => {\n    if (this.state.loadingStatus.display === \"block\") {\n      await this.setState({\n        loadingStatus: {\n          display: \"none\"\n        },\n        loadedStatus: {\n          display: \"block\"\n        }\n      });\n    } else {\n      await this.setState({\n        loadingStatus: {\n          display: \"block\"\n        },\n        loadedStatus: {\n          display: \"none\"\n        }\n      });\n    }\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyNamesFromApi: [],\n      materialNamesFromApi: [],\n      drillingfeet: 0,\n      date: null,\n      selectedParty: \"\",\n      selectedMaterial: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        display: \"block\"\n      },\n      loadedStatus: {\n        display: \"none\"\n      }\n    };\n\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkParty = this.checkParty.bind(this);\n    this.checkMaterial = this.checkMaterial.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.onSubmit(e)}\n      >\n        <h3 style={this.state.loadingStatus}>There is no machine party or material</h3>\n        <div style={this.state.loadedStatus}>\n          <p className=\"headingViewPart\">Machine Supply Entry</p>\n          <div className=\"pt-5\">\n            <Autocomplete\n              suggestions={this.state.partyNamesFromApi}\n              callbackFromParent={dataFromChild => {\n                this.state.selectedParty = dataFromChild;\n              }}\n              checkFromParent={this.checkParty}\n              placeholderfrom={\"Party name\"}\n            />\n\n            <p>{this.state.partyExistMessage}</p>\n            <br />\n\n            <select onChange={e => this.state.selectedMaterial=e.target.value}>\n                  {this.state.materialNamesFromApi.map((item) => (\n                      <option value={item} key= {item}>{item}</option>\n                  ))}\n            </select> \n\n            <br />\n            <br />\n\n            <InputDateField\n              callbackFromParent={dataFromChild => {\n                this.state.date = dataFromChild;\n              }}\n            />\n            <br />\n            <br />\n\n            <InputQuantityField\n              placeholder=\"Drilling Feet\"\n              callbackFromParent={dataFromChild => {\n                this.state.drillingfeet = dataFromChild;\n              }}\n            />\n            <br />\n            <br />\n            <InputQuantityField\n              placeholder={\"Quantity\"}\n              callbackFromParent={dataFromChild => {\n                this.state.quantity = dataFromChild;\n              }}\n            />\n          </div>\n          <p>{this.state.responseMessage}</p>\n          <button\n            type=\"submit\"\n            className=\"btn btn-outline-dark\"\n            style={this.state.buttonStatus}\n          >\n            Save\n          </button>\n        </div>   \n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}