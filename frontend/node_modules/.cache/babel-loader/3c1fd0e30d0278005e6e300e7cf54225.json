{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/minesmart/frontend/src/components/entry/MachineWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport './entry.css';\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nimport InputRateField from \"../modular/InputRateField\";\nexport default class MachineWorkEntry extends React.Component {\n  //Fetching Machines And Machine Parties from DataBase\n  //form Handler Submitting\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responsePartyList = await fetch(\"http://127.0.0.1:8000/list-of-machineparty/\");\n        const jsonPartyList = await responsePartyList.json();\n        const responseMachineList = await fetch(\"http://127.0.0.1:8000/list-of-machines/\");\n        const jsonMachineList = await responseMachineList.json();\n\n        if (jsonPartyList.length > 0 && jsonMachineList.length > 0) {\n          this.state.partyNamesFromApi = [];\n          jsonPartyList.map(item => this.setState({\n            partyNamesFromApi: [...this.state.partyNamesFromApi, item.name]\n          }));\n          this.state.machineNamesFromApi = [];\n          jsonMachineList.map(item => this.setState({\n            machineNamesFromApi: [...this.state.machineNamesFromApi, item.name]\n          }));\n          this.setState({\n            selectedMachine: this.state.machineNamesFromApi[0]\n          });\n        } else {\n          this.toggleLoadStatus();\n        }\n      } catch {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-machineparty-work/\", {\n        party: this.state.selectedParty,\n        machine: this.state.selectedMachine,\n        date: this.state.date,\n        drilling_feet: this.state.drillingFeet,\n        diesel_amount: this.state.dieselAmount,\n        remark: this.state.remark,\n        payment: this.state.payment,\n        holes: this.state.holes\n      }).then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.display === \"block\") {\n        await this.setState({\n          loadingStatus: {\n            display: \"none\"\n          },\n          loadedStatus: {\n            display: \"block\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            display: \"block\"\n          },\n          loadedStatus: {\n            display: \"none\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      machineNamesFromApi: [],\n      payment: 0,\n      holes: 0,\n      date: null,\n      selectedMachine: \"\",\n      selectedParty: \"\",\n      remark: \"\",\n      dieselAmount: 0,\n      drillingFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        display: \"block\"\n      },\n      loadedStatus: {\n        display: \"none\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"mainComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex justify-content-center align-items-center scrollingSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: this.state.loadingStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"There is no Machine or Machine party\"), React.createElement(\"div\", {\n      style: this.state.loadedStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Machine Work Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedParty = dataFromChild;\n      },\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: e => this.state.selectedMachine = e.target.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.state.machineNamesFromApi.map(item => React.createElement(\"option\", {\n      value: item,\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, item))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      placeholderParent: \"Diesel in liter\",\n      callbackFromParent: dataFromChild => {\n        this.state.dieselAmount = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      placeholderParent: \"Drilling Feet\",\n      callbackFromParent: dataFromChild => {\n        this.state.drillingFeet = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Holes\",\n      callbackFromParent: dataFromChild => {\n        this.state.holes = parseInt(dataFromChild);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      placeholderParent: \"Payment Received\",\n      callbackFromParent: dataFromChild => {\n        this.state.payment = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), React.createElement(InputRemarkField, {\n      callbackFromParent: dataFromChild => {\n        this.state.remark = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/minesmart/frontend/src/components/entry/MachineWorkEntry.js"],"names":["React","axios","Autocomplete","InputDateField","InputRemarkField","InputQuantityField","InputRateField","MachineWorkEntry","Component","constructor","props","fetchProduct","responsePartyList","fetch","jsonPartyList","json","responseMachineList","jsonMachineList","length","state","partyNamesFromApi","map","item","setState","name","machineNamesFromApi","selectedMachine","toggleLoadStatus","onSubmit","e","post","party","selectedParty","machine","date","drilling_feet","drillingFeet","diesel_amount","dieselAmount","remark","payment","holes","then","res","responseMessage","data","catch","error","alert","response","request","_response","target","reset","preventDefault","loadingStatus","display","loadedStatus","buttonStatus","visibility","bind","componentDidMount","render","dataFromChild","partyExistMessage","value","parseInt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport './entry.css';\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nimport InputRateField from \"../modular/InputRateField\";\n\n\nexport default class MachineWorkEntry extends React.Component {\n  //Fetching Machines And Machine Parties from DataBase\n  fetchProduct = async () => {\n    try {\n      const responsePartyList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machineparty/\"\n      );\n      const jsonPartyList = await responsePartyList.json();\n\n      const responseMachineList = await fetch(\n        \"http://127.0.0.1:8000/list-of-machines/\"\n      );\n      const jsonMachineList = await responseMachineList.json();\n      \n      if(jsonPartyList.length > 0 && jsonMachineList.length > 0){\n        this.state.partyNamesFromApi= [];\n          jsonPartyList.map(item =>\n            this.setState({\n              partyNamesFromApi: [...this.state.partyNamesFromApi, item.name]\n            }) \n          );\n\n          this.state.machineNamesFromApi=[];\n          jsonMachineList.map(item =>\n            this.setState({ \n              machineNamesFromApi: [...this.state.machineNamesFromApi, item.name] \n            })\n          );\n\n          this.setState({\n            selectedMachine: this.state.machineNamesFromApi[0]\n          });\n      }\n      else{\n        this.toggleLoadStatus();\n      }\n    } \n    catch {}\n  };\n\n\n  //form Handler Submitting\n  onSubmit = e => {\n    axios\n      .post(\"http://127.0.0.1:8000/enter-machineparty-work/\", {\n        party: this.state.selectedParty,\n        machine: this.state.selectedMachine,\n        date: this.state.date,\n        drilling_feet: this.state.drillingFeet,\n        diesel_amount: this.state.dieselAmount,\n        remark: this.state.remark,\n        payment: this.state.payment,\n        holes: this.state.holes\n      })\n      .then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      })\n      .catch(error => {\n        alert(error.response.request._response);\n      });\n\n    e.target.reset();\n    e.preventDefault();\n  };\n\n  // toggle load status\n  toggleLoadStatus = async () => {\n    if (this.state.loadingStatus.display === \"block\") {\n      await this.setState({\n        loadingStatus: {\n          display: \"none\"\n        },\n        loadedStatus: {\n          display: \"block\"\n        }\n      });\n    } else {\n      await this.setState({\n        loadingStatus: {\n          display: \"block\"\n        },\n        loadedStatus: {\n          display: \"none\"\n        }\n      });\n    }\n  };\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyNamesFromApi: [],\n      machineNamesFromApi: [],\n      payment: 0,\n      holes: 0,\n      date: null,\n      selectedMachine: \"\",\n      selectedParty: \"\",\n      remark: \"\",\n      dieselAmount: 0,\n      drillingFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        display: \"block\"\n      },\n      loadedStatus: {\n        display: \"none\"\n      }\n    };\n\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return (\n      <div id=\"mainComponent\">\n        <div className=\"d-flex justify-content-center align-items-center scrollingSection\">\n          <form\n            className=\"form-container form-group\"\n            onSubmit={e => this.onSubmit(e)}\n          >\n            <h3 style={this.state.loadingStatus}>There is no Machine or Machine party</h3>\n            <div style={this.state.loadedStatus}>\n              <p className=\"headingViewPart\">Machine Work Entry</p>\n              <div className=\"pt-5\">\n                <Autocomplete\n                  suggestions={this.state.partyNamesFromApi}\n                  callbackFromParent={dataFromChild => {\n                    this.state.selectedParty = dataFromChild;\n                  }}\n                  placeholderfrom={\"Party name\"}\n                />\n\n                <p>{this.state.partyExistMessage}</p>\n                <br />\n                \n                <select onChange={e => this.state.selectedMachine=e.target.value}>\n                  {this.state.machineNamesFromApi.map((item) => (\n                      <option value={item} key={item}>{item}</option>\n                  ))}\n                </select> \n\n                <br />\n                <br />\n\n                <InputDateField\n                  callbackFromParent={dataFromChild => {\n                    this.state.date = dataFromChild;\n                  }}\n                />\n\n                <br />\n                <br />\n                <InputRateField\n                  placeholderParent={\"Diesel in liter\"}\n                  callbackFromParent={dataFromChild => {\n                    this.state.dieselAmount = dataFromChild;\n                  }}\n                />\n\n                <br />\n                <br />\n\n                <InputRateField\n                  placeholderParent={\"Drilling Feet\"}\n                  callbackFromParent={dataFromChild => {\n                    this.state.drillingFeet = dataFromChild;\n                  }}\n                />\n                <br />\n                <br />\n\n                <InputQuantityField\n                  placeholder={\"Holes\"}\n                  callbackFromParent={dataFromChild => {\n                    this.state.holes = parseInt(dataFromChild);\n                  }}\n                />\n                <br />\n                <br />\n\n                <InputRateField\n                  placeholderParent={\"Payment Received\"}\n                  callbackFromParent={dataFromChild => {\n                    this.state.payment = dataFromChild;\n                  }}\n                />\n                <br />\n                <br />\n\n                <InputRemarkField\n                  callbackFromParent={dataFromChild => {\n                    this.state.remark = dataFromChild;\n                  }}\n                />\n              </div>\n              <p>{this.state.responseMessage}</p>\n              <button\n                type=\"submit\"\n                className=\"btn btn-outline-dark\"\n                style={this.state.buttonStatus}\n              >\n                Save\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>    \n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}