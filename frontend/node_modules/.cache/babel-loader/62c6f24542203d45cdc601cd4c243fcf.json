{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/minesmart/frontend/src/components/entry/VehicleWorkEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputRateField from \"../modular/InputRateField.js\";\nexport default class VehicleWorkEntry extends React.Component {\n  //fetching VehicleParty and Vehicles from database\n  // Check existence of party name\n  //Form Handler Function\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responsePartyList = await fetch(\"http://127.0.0.1:8000/list-of-vehicleparty/\");\n        const jsonPartyList = await responsePartyList.json();\n\n        if (jsonPartyList.length > 0) {\n          this.state.partyNamesFromApi = [];\n          jsonPartyList.map(item => this.setState({\n            partyNamesFromApi: [...this.state.partyNamesFromApi, item.name]\n          }));\n        } else {\n          this.toggleLoadStatus();\n        }\n      } catch {}\n    };\n\n    this.checkParty = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.partyNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-vehicleparty-work/\", {\n        party: this.state.selectedParty,\n        date: this.state.date,\n        feet: this.state.feet / 12,\n        five_feet: this.state.fiveFeet,\n        two_half_feet: this.state.twoHalfFeet,\n        remark: this.state.remark,\n        payment: this.state.payment\n      }).then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.display === \"block\") {\n        await this.setState({\n          loadingStatus: {\n            display: \"none\"\n          },\n          loadedStatus: {\n            display: \"block\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            display: \"block\"\n          },\n          loadedStatus: {\n            display: \"none\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      partyNamesFromApi: [],\n      date: null,\n      payment: 0,\n      selectedParty: \"\",\n      remark: \"\",\n      feet: 0,\n      fiveFeet: 0,\n      twoHalfFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      },\n      loadingStatus: {\n        display: \"block\"\n      },\n      loadedStatus: {\n        display: \"none\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkParty = this.checkParty.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"mainComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"d-flex justify-content-center align-items-center scrollingSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: this.state.loadingStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"There is no vehicle party\"), React.createElement(\"div\", {\n      style: this.state.loadedStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Vehicle Work Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(Autocomplete, {\n      suggestions: this.state.partyNamesFromApi,\n      callbackFromParent: dataFromChild => {\n        this.state.selectedParty = dataFromChild;\n      },\n      checkFromParent: this.checkParty,\n      placeholderfrom: \"Party name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.partyExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(InputRemarkField, {\n      callbackFromParent: dataFromChild => {\n        this.state.remark = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.feet = dataFromChild;\n      },\n      placeholderParent: \"Feet (inch)\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.fiveFeet = dataFromChild;\n      },\n      placeholderParent: \"5 Feet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.twoHalfFeet = dataFromChild;\n      },\n      placeholderParent: \"2.5 Feet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      placeholderParent: \"Payment Received\",\n      callbackFromParent: dataFromChild => {\n        this.state.payment = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Save\")))));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/minesmart/frontend/src/components/entry/VehicleWorkEntry.js"],"names":["React","axios","Autocomplete","InputDateField","InputRemarkField","InputRateField","VehicleWorkEntry","Component","constructor","props","fetchProduct","responsePartyList","fetch","jsonPartyList","json","length","state","partyNamesFromApi","map","item","setState","name","toggleLoadStatus","checkParty","dataFromChild","responseMessage","buttonStatus","visibility","showList","index","toLowerCase","forEach","err","onSubmit","e","post","party","selectedParty","date","feet","five_feet","fiveFeet","two_half_feet","twoHalfFeet","remark","payment","then","res","data","catch","error","alert","response","request","_response","target","reset","preventDefault","loadingStatus","display","loadedStatus","radioButtonStyle","float","bind","componentDidMount","render","partyExistMessage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputRemarkField from \"../modular/InputRemarkField\";\nimport InputRateField from \"../modular/InputRateField.js\";\n\nexport default class VehicleWorkEntry extends React.Component {\n  //fetching VehicleParty and Vehicles from database\n  fetchProduct = async () => {\n    try {\n      const responsePartyList = await fetch(\n        \"http://127.0.0.1:8000/list-of-vehicleparty/\"\n      );\n      const jsonPartyList = await responsePartyList.json();\n      if(jsonPartyList.length > 0){\n        this.state.partyNamesFromApi= [];\n        jsonPartyList.map(item =>\n          this.setState({\n            partyNamesFromApi: [...this.state.partyNamesFromApi, item.name]\n          }) \n        );\n      }\n      else{\n        this.toggleLoadStatus();\n      }\n    } \n    catch {}\n  };\n\n  // Check existence of party name\n  checkParty = dataFromChild => {\n    try {\n      this.setState({\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      const showList = (item, index) => {\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n          this.setState({\n            buttonStatus: {\n              visibility: \"visible\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.partyNamesFromApi.forEach(showList);\n    } catch (err) {}\n  };\n\n  //Form Handler Function\n  onSubmit = e => {\n    axios\n      .post(\"http://127.0.0.1:8000/enter-vehicleparty-work/\", {\n        party: this.state.selectedParty,\n        date: this.state.date,\n        feet: (this.state.feet/12),\n        five_feet: this.state.fiveFeet,\n        two_half_feet: this.state.twoHalfFeet,\n        remark: this.state.remark,\n        payment: this.state.payment\n      })\n      .then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      })\n      .catch(error => {\n        alert(error.response.request._response);\n      });\n\n    e.target.reset();\n    e.preventDefault();\n  };\n\n  // toggle load status\n  toggleLoadStatus = async () => {\n    if (this.state.loadingStatus.display === \"block\") {\n      await this.setState({\n        loadingStatus: {\n          display: \"none\"\n        },\n        loadedStatus: {\n          display: \"block\"\n        }\n      });\n    } else {\n      await this.setState({\n        loadingStatus: {\n          display: \"block\"\n        },\n        loadedStatus: {\n          display: \"none\"\n        }\n      });\n    }\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      partyNamesFromApi: [],\n\n      date: null,\n      payment: 0,\n\n      selectedParty: \"\",\n      remark: \"\",\n      feet: 0,\n      fiveFeet: 0,\n      twoHalfFeet: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      radioButtonStyle: {\n        float: \"left\"\n      },\n      loadingStatus: {\n        display: \"block\"\n      },\n      loadedStatus: {\n        display: \"none\"\n      }\n    };\n\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkParty = this.checkParty.bind(this);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n  render() {\n    return (\n      <div id=\"mainComponent\">\n        <div className=\"d-flex justify-content-center align-items-center scrollingSection\">\n          <form\n            className=\"form-container form-group\"\n            onSubmit={e => this.onSubmit(e)}\n          >\n            <h3 style={this.state.loadingStatus}>There is no vehicle party</h3>\n            <div style={this.state.loadedStatus}>\n              <p className=\"headingViewPart\">Vehicle Work Entry</p>\n              <div className=\"pt-5\">\n                <Autocomplete\n                  suggestions={this.state.partyNamesFromApi}\n                  callbackFromParent={dataFromChild => {\n                    this.state.selectedParty = dataFromChild;\n                  }}\n                  checkFromParent={this.checkParty}\n                  placeholderfrom={\"Party name\"}\n                />\n                <p>{this.state.partyExistMessage}</p>\n\n                <br />\n\n                <InputDateField\n                  callbackFromParent={dataFromChild => {\n                    this.state.date = dataFromChild;\n                  }}\n                />\n\n                <br />\n                <br />\n\n                <InputRemarkField\n                  callbackFromParent={dataFromChild => {\n                    this.state.remark = dataFromChild;\n                  }}\n                />\n\n                <br />\n                <br />\n\n                <InputRateField\n                  callbackFromParent={dataFromChild => {\n                    this.state.feet = dataFromChild;\n                  }}\n                  placeholderParent={\"Feet (inch)\"}\n                />\n\n                <br />\n                <br />\n\n                <InputRateField\n                  callbackFromParent={dataFromChild => {\n                    this.state.fiveFeet = dataFromChild;\n                  }}\n                  placeholderParent={\"5 Feet\"}\n                />\n\n                <br />\n                <br />\n                <InputRateField\n                  callbackFromParent={dataFromChild => {\n                    this.state.twoHalfFeet = dataFromChild;\n                  }}\n                  placeholderParent={\"2.5 Feet\"}\n                />\n                <br />\n                <br />\n                <InputRateField\n                  placeholderParent={\"Payment Received\"}\n                  callbackFromParent={dataFromChild => {\n                    this.state.payment = dataFromChild;\n                  }}\n                />\n              </div>\n              <p>{this.state.responseMessage}</p>\n              <button\n                type=\"submit\"\n                className=\"btn btn-outline-dark\"\n                style={this.state.buttonStatus}\n              >\n                Save\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>  \n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}