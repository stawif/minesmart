{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/minesmart/frontend/src/components/entry/VehicleSupplyEntry.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport './entry.css';\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nexport default class VehicleSupplyEntry extends React.Component {\n  //Fetching Products from Database to use them in AutoSugestion and for Checking While Entered Value Exists in Database or Not\n  //Check Existence of item list\n  // Form Submit Handling\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responseItemList = await fetch(\"http://127.0.0.1:8000/list-of-material/\");\n        const jsonItemList = await responseItemList.json();\n\n        if (jsonItemList.length > 0) {\n          this.state.materialNamesFromApi = [];\n          jsonItemList.map(item => this.setState({\n            materialNamesFromApi: [...this.state.materialNamesFromApi, item.name]\n          }));\n          this.setState({\n            selectedMaterial: this.state.materialNamesFromApi[0]\n          });\n        } else {\n          this.toggleLoadStatus();\n        }\n      } catch {}\n    };\n\n    this.checkItem = dataFromChild => {\n      try {\n        this.setState({\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"hidden\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n            this.setState({\n              buttonStatus: {\n                visibility: \"visible\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.materialNamesFromApi.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/enter-vehicle-supply/\", {\n        material: this.state.selectedItem,\n        date: this.state.date,\n        quantity: this.state.quantity\n      }).then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        alert(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.display === \"block\") {\n        await this.setState({\n          loadingStatus: {\n            display: \"none\"\n          },\n          loadedStatus: {\n            display: \"block\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            display: \"block\"\n          },\n          loadedStatus: {\n            display: \"none\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      materialNamesFromApi: [],\n      date: null,\n      selectedItem: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        display: \"block\"\n      },\n      loadedStatus: {\n        display: \"none\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkItem = this.checkItem.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: this.state.loadingStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"There is no material registered\"), React.createElement(\"div\", {\n      style: this.state.loadedStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Vehicle Supply Entry\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: e => this.state.selectedMaterial = e.target.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.state.materialNamesFromApi.map(item => React.createElement(\"option\", {\n      value: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, item))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromChild => {\n        this.state.date = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Quantity\",\n      callbackFromParent: dataFromChild => {\n        this.state.quantity = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/minesmart/frontend/src/components/entry/VehicleSupplyEntry.js"],"names":["React","axios","Autocomplete","InputDateField","InputQuantityField","VehicleSupplyEntry","Component","constructor","props","fetchProduct","responseItemList","fetch","jsonItemList","json","length","state","materialNamesFromApi","map","item","setState","name","selectedMaterial","toggleLoadStatus","checkItem","dataFromChild","responseMessage","buttonStatus","visibility","showList","index","toLowerCase","forEach","err","onSubmit","e","post","material","selectedItem","date","quantity","then","res","data","catch","error","alert","response","request","_response","target","reset","preventDefault","loadingStatus","display","loadedStatus","bind","componentDidMount","render","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport './entry.css';\nimport Autocomplete from \"./AutoComplete.jsx\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\n\nexport default class VehicleSupplyEntry extends React.Component {\n  //Fetching Products from Database to use them in AutoSugestion and for Checking While Entered Value Exists in Database or Not\n  fetchProduct = async () => {\n    try {\n      const responseItemList = await fetch(\n        \"http://127.0.0.1:8000/list-of-material/\"\n      );\n      const jsonItemList = await responseItemList.json();\n      if(jsonItemList.length > 0){\n\n        this.state.materialNamesFromApi= [];\n        jsonItemList.map(item => \n          this.setState({ \n            materialNamesFromApi: [...this.state.materialNamesFromApi, item.name] \n          })\n        );\n        this.setState({\n          selectedMaterial: this.state.materialNamesFromApi[0]\n        });\n      }\n      else{\n        this.toggleLoadStatus();\n      }\n    } \n    catch {}    \n  };\n\n\n  //Check Existence of item list\n  checkItem = dataFromChild => {\n    try {\n      this.setState({\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"hidden\"\n        }\n      });\n      const showList = (item, index) => {\n        if (dataFromChild.toLowerCase() === item.toLowerCase()) {\n          this.setState({\n            buttonStatus: {\n              visibility: \"visible\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.materialNamesFromApi.forEach(showList);\n    } catch (err) {}\n  };\n\n  // Form Submit Handling\n  onSubmit = e => {\n    axios\n      .post(\"http://127.0.0.1:8000/enter-vehicle-supply/\", {\n        material: this.state.selectedItem,\n        date: this.state.date,\n        quantity: this.state.quantity\n      })\n      .then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      })\n      .catch(error => {\n        alert(error.response.request._response);\n      });\n  \n    e.target.reset();\n    e.preventDefault();\n  };\n\n  // toggle load status\n  toggleLoadStatus = async () => {\n    if (this.state.loadingStatus.display === \"block\") {\n      await this.setState({\n        loadingStatus: {\n          display: \"none\"\n        },\n        loadedStatus: {\n          display: \"block\"\n        }\n      });\n    } else {\n      await this.setState({\n        loadingStatus: {\n          display: \"block\"\n        },\n        loadedStatus: {\n          display: \"none\"\n        }\n      });\n    }\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      materialNamesFromApi: [],\n\n      date: null,\n      selectedItem: \"\",\n      quantity: 0,\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        display: \"block\"\n      },\n      loadedStatus: {\n        display: \"none\"\n      }\n    };\n\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkItem = this.checkItem.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.onSubmit(e)}\n      >\n        <h3 style={this.state.loadingStatus}>There is no material registered</h3>\n        <div style={this.state.loadedStatus}>\n          <p className=\"headingViewPart\">Vehicle Supply Entry</p>\n          <div className=\"pt-5\">\n          <select onChange={e => this.state.selectedMaterial=e.target.value}>\n                  {this.state.materialNamesFromApi.map((item) => (\n                      <option value={item}>{item}</option>\n                  ))}\n            </select> \n\n            <br />\n            <br />\n\n            <InputDateField\n              callbackFromParent={dataFromChild => {\n                this.state.date = dataFromChild;\n              }}\n            />\n\n            <br />\n            <br />\n\n            <InputQuantityField\n              placeholder={\"Quantity\"}\n              callbackFromParent={dataFromChild => {\n                this.state.quantity = dataFromChild;\n              }}\n            />\n          </div>\n          <p>{this.state.responseMessage}</p>\n          <button\n            type=\"submit\"\n            className=\"btn btn-outline-dark\"\n            style={this.state.buttonStatus}\n          >\n            Save\n          </button>\n        </div>    \n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}