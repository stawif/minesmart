{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/minesmart/frontend/src/components/registration/WorkerRegistration.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport InputContactField from \"../modular/InputContactField\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputCommonName from \"../modular/InputCommonName\";\nimport InputPartyVillageField from \"../modular/InputPartyVillageField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nexport default class WorkerRegistration extends React.Component {\n  // Fetch vehicle list from server\n  // Check existence of vehicle name\n  // toggle load status\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responseWorkerList = await fetch(\"http://127.0.0.1:8000/list-of-worker/\");\n        const jsonWorkerList = await responseWorkerList.json();\n        this.setState({\n          workerList: jsonWorkerList\n        }); //this.state.workerList = jsonWorkerList;\n      } catch {\n        this.toggleLoadStatus();\n      }\n    };\n\n    this.checkWorker = () => {\n      try {\n        this.setState({\n          workerExistMessage: \"\",\n          responseMessage: \"\",\n          buttonStatus: {\n            visibility: \"visible\"\n          }\n        });\n\n        const showList = (item, index) => {\n          if (this.state.workerName.length < 3) {\n            this.setState({\n              workerExistMessage: \"* Please Enter Minimum length of 3\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\n            this.setState({\n              workerExistMessage: \"* This worker name is already exist!!!\",\n              buttonStatus: {\n                visibility: \"hidden\"\n              }\n            });\n          } else {}\n        };\n\n        this.state.workerList.forEach(showList);\n      } catch (err) {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/worker-registration/\", {\n        name: this.state.workerName,\n        contact: this.state.workerContact,\n        village: this.state.workerVillage,\n        salary: this.state.workerSalary,\n        advance: this.state.advance\n      }).then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {//console.log(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      workerName: \"\",\n      workerContact: \"\",\n      workerVillage: \"\",\n      workerSalary: 0,\n      advance: 0,\n      workerList: {},\n      workerExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkWorker = this.checkWorker.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Worker Registration\"), React.createElement(\"div\", {\n      className: \"pt-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(InputCommonName, {\n      minLengthh: 3,\n      placeholderParent: \"Worker Name\",\n      callbackFromParent: dataFromChild => {\n        this.state.workerName = dataFromChild;\n        this.checkWorker();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.workerExistMessage), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(InputContactField, {\n      callbackFromParent: dataFromChild => {\n        this.state.workerContact = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(InputPartyVillageField, {\n      callbackFromParent: dataFromChild => {\n        this.state.workerVillage = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), React.createElement(InputQuantityField, {\n      placeholder: \"Worker Salary\",\n      callbackFromParent: dataFromChild => {\n        this.state.workerSalary = dataFromChild;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      style: this.state.buttonStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Save\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/ashokbatesar/minesmart/frontend/src/components/registration/WorkerRegistration.js"],"names":["React","axios","InputContactField","InputDateField","InputCommonName","InputPartyVillageField","InputQuantityField","WorkerRegistration","Component","constructor","props","fetchProduct","responseWorkerList","fetch","jsonWorkerList","json","setState","workerList","toggleLoadStatus","checkWorker","workerExistMessage","responseMessage","buttonStatus","visibility","showList","item","index","state","workerName","length","toLowerCase","name","forEach","err","onSubmit","e","post","contact","workerContact","village","workerVillage","salary","workerSalary","advance","then","res","data","catch","error","target","reset","preventDefault","loadingStatus","loadedStatus","bind","componentDidMount","render","dataFromChild"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport InputContactField from \"../modular/InputContactField\";\nimport InputDateField from \"../modular/InputDateField\";\nimport InputCommonName from \"../modular/InputCommonName\";\nimport InputPartyVillageField from \"../modular/InputPartyVillageField\";\nimport InputQuantityField from \"../modular/InputQuantityField\";\nexport default class WorkerRegistration extends React.Component {\n  // Fetch vehicle list from server\n  fetchProduct = async () => {\n    try {\n      const responseWorkerList = await fetch(\n        \"http://127.0.0.1:8000/list-of-worker/\"\n      );\n      const jsonWorkerList = await responseWorkerList.json();\n      this.setState({ workerList: jsonWorkerList });\n      //this.state.workerList = jsonWorkerList;\n    } catch {\n      this.toggleLoadStatus();\n    }\n  };\n\n  // Check existence of vehicle name\n  checkWorker = () => {\n    try {\n      this.setState({\n        workerExistMessage: \"\",\n        responseMessage: \"\",\n        buttonStatus: {\n          visibility: \"visible\"\n        }\n      });\n      const showList = (item, index) => {\n        if( this.state.workerName.length < 3){\n          this.setState({\n            workerExistMessage: \"* Please Enter Minimum length of 3\",\n            buttonStatus: {\n              visibility: \"hidden\"\n            }\n          });\n        }\n        else if (this.state.workerName.toLowerCase() === item.name.toLowerCase()) {\n          this.setState({\n            workerExistMessage: \"* This worker name is already exist!!!\",\n            buttonStatus: {\n              visibility: \"hidden\"\n            }\n          });\n        } else {\n        }\n      };\n      this.state.workerList.forEach(showList);\n    } catch (err) {}\n  };\n\n  onSubmit = e => {\n    axios\n      .post(\"http://127.0.0.1:8000/worker-registration/\", {\n        name: this.state.workerName,\n        contact: this.state.workerContact,\n        village: this.state.workerVillage,\n        salary: this.state.workerSalary,\n        advance: this.state.advance\n      })\n      .then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      })\n      .catch(error => {\n        //console.log(error.response.request._response);\n      });\n\n    e.target.reset();\n    e.preventDefault();\n  };\n\n  // toggle load status\n  toggleLoadStatus = async () => {\n    if (this.state.loadingStatus.visibility === \"visible\") {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"hidden\"\n        },\n        loadedStatus: {\n          visibility: \"visible\"\n        }\n      });\n    } else {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"visible\"\n        },\n        loadedStatus: {\n          visibility: \"hidden\"\n        }\n      });\n    }\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      workerName: \"\",\n      workerContact: \"\",\n      workerVillage: \"\",\n      workerSalary: 0,\n      advance: 0,\n      workerList: {},\n      workerExistMessage: \"\",\n      responseMessage: \"\",\n      buttonStatus: {\n        visibility: \"visible\"\n      },\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.checkWorker = this.checkWorker.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  render() {\n    return (\n      <form\n        className=\"form-container form-group\"\n        onSubmit={e => this.onSubmit(e)}\n      >\n        <p className=\"headingViewPart\">Worker Registration</p>\n        <div className=\"pt-5\">\n          <InputCommonName\n            minLengthh={3}\n            placeholderParent={\"Worker Name\"}\n            callbackFromParent={dataFromChild => {\n              this.state.workerName = dataFromChild;\n              this.checkWorker();\n            }}\n          />\n\n          <p>{this.state.workerExistMessage}</p>\n          <br />\n          \n          <InputContactField\n            callbackFromParent={dataFromChild => {\n              this.state.workerContact = dataFromChild;\n            }}\n          />\n\n          <br />\n          <br />\n\n          <InputPartyVillageField\n            callbackFromParent={dataFromChild => {\n              this.state.workerVillage = dataFromChild;\n            }}\n          />\n\n          <br />\n          <br />\n\n          <InputQuantityField\n            placeholder={\"Worker Salary\"}\n            callbackFromParent={dataFromChild => {\n              this.state.workerSalary = dataFromChild;\n            }}\n          />\n          <br />\n        </div>\n        <p>{this.state.responseMessage}</p>\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-dark\"\n          style={this.state.buttonStatus}\n        >\n          Save\n        </button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}