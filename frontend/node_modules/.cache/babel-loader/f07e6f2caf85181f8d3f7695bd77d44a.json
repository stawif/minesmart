{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/minesmart/frontend/src/components/entry/WorkerDebit.js\";\nimport React from 'react';\nimport axios from \"axios\";\nimport Autocomplete from './AutoComplete';\nimport InputCommonName from '../modular/InputCommonName';\nimport InputDateField from '../modular/InputDateField';\nimport InputRateField from '../modular/InputRateField';\nimport InputRemarkField from \"../modular/InputRemarkField\";\n\nclass WorkerDebit extends React.Component {\n  //fetching VehicleParty and Vehicles from database\n  //form Handler Submitting\n  // toggle load status\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      try {\n        const responseWorkerList = await fetch(\"http://127.0.0.1:8000/list-of-worker/\");\n        const jsonWorkerList = await responseWorkerList.json();\n\n        if (jsonWorkerList.length > 0) {\n          this.state.workerNamesFromApi = [];\n          jsonWorkerList.map(item => this.setState({\n            workerNamesFromApi: [...this.state.workerNamesFromApi, item.name]\n          }));\n        } else {\n          this.toggleLoadStatus();\n        }\n      } catch {}\n    };\n\n    this.onSubmit = e => {\n      axios.post(\"http://127.0.0.1:8000/worker-payment/\", {\n        name: this.state.name,\n        debit_amount: this.state.debitAmount,\n        date: this.state.date,\n        remark: this.state.remark\n      }).then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      }).catch(error => {\n        console.log(error.response.request._response);\n      });\n      e.target.reset();\n      e.preventDefault();\n    };\n\n    this.toggleLoadStatus = async () => {\n      if (this.state.loadingStatus.visibility === \"visible\") {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"hidden\"\n          },\n          loadedStatus: {\n            visibility: \"visible\"\n          }\n        });\n      } else {\n        await this.setState({\n          loadingStatus: {\n            visibility: \"visible\"\n          },\n          loadedStatus: {\n            visibility: \"hidden\"\n          }\n        });\n      }\n    };\n\n    this.state = {\n      name: \"\",\n      debitAmount: 0,\n      date: null,\n      remark: \"\",\n      workerNamesFromApi: [],\n      responseMessage: \"\",\n      loadingStatus: {\n        visibility: \"visible\"\n      },\n      loadedStatus: {\n        visibility: \"hidden\"\n      }\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.toggleLoadStatus = this.toggleLoadStatus.bind(this);\n    this.fetchProduct();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"form-container form-group\",\n      onSubmit: e => this.onSubmit(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: this.state.loadingStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"There is no worker currently\"), React.createElement(\"div\", {\n      style: this.state.loadedStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"headingViewPart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Worker Debit Entry\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Autocomplete, {\n      suggestions: this.state.workerNamesFromApi,\n      placeholderfrom: \"Worker Name\",\n      callbackFromParent: dataFromPrent => {\n        this.state.name = dataFromPrent;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(InputRateField, {\n      placeholderParent: \"Debit Amount\",\n      callbackFromParent: dataFromPrent => {\n        this.state.debitAmount = dataFromPrent;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(InputDateField, {\n      callbackFromParent: dataFromPrent => {\n        this.state.date = dataFromPrent;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(InputRemarkField, {\n      callbackFromParent: dataFromPrent => {\n        this.state.remark = dataFromPrent;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.responseMessage), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-outline-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Save\")));\n  }\n\n}\n\nexport default WorkerDebit;","map":{"version":3,"sources":["/Users/ashokbatesar/minesmart/frontend/src/components/entry/WorkerDebit.js"],"names":["React","axios","Autocomplete","InputCommonName","InputDateField","InputRateField","InputRemarkField","WorkerDebit","Component","componentDidMount","toggleLoadStatus","constructor","props","fetchProduct","responseWorkerList","fetch","jsonWorkerList","json","length","state","workerNamesFromApi","map","item","setState","name","onSubmit","e","post","debit_amount","debitAmount","date","remark","then","res","responseMessage","data","catch","error","console","log","response","request","_response","target","reset","preventDefault","loadingStatus","visibility","loadedStatus","bind","render","dataFromPrent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from \"axios\";\nimport Autocomplete from './AutoComplete';\nimport InputCommonName from '../modular/InputCommonName';\nimport InputDateField from '../modular/InputDateField';\nimport InputRateField from '../modular/InputRateField';\nimport InputRemarkField from \"../modular/InputRemarkField\";\n\nclass WorkerDebit extends React.Component{\n  //fetching VehicleParty and Vehicles from database\n  fetchProduct = async () => {\n    try {\n      const responseWorkerList = await fetch(\n        \"http://127.0.0.1:8000/list-of-worker/\"\n      );\n      const jsonWorkerList = await responseWorkerList.json();\n      \n      if(jsonWorkerList.length > 0){\n        this.state.workerNamesFromApi= [];\n        jsonWorkerList.map(item => \n          this.setState({\n            workerNamesFromApi: [...this.state.workerNamesFromApi, item.name]\n          })\n        );\n      }\n      else{\n        this.toggleLoadStatus();\n      }\n    } \n    catch {}\n  };\n\n  //form Handler Submitting\n  onSubmit = e => {\n    axios\n      .post(\"http://127.0.0.1:8000/worker-payment/\", {\n          name: this.state.name,\n          debit_amount: this.state.debitAmount,\n          date: this.state.date,\n          remark: this.state.remark\n      })\n      .then(res => {\n        this.fetchProduct();\n        this.setState({\n          responseMessage: res.data\n        });\n      })\n      .catch(error => {\n        console.log(error.response.request._response);\n      });\n\n    e.target.reset();\n    e.preventDefault();\n  };\n  // toggle load status\n  toggleLoadStatus = async () => {\n    if (this.state.loadingStatus.visibility === \"visible\") {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"hidden\"\n        },\n        loadedStatus: {\n          visibility: \"visible\"\n        }\n      });\n    } else {\n      await this.setState({\n        loadingStatus: {\n          visibility: \"visible\"\n        },\n        loadedStatus: {\n          visibility: \"hidden\"\n        }\n      });\n    }\n  };\n\n  componentDidMount() {\n    this.toggleLoadStatus();\n  }\n  constructor(props){\n        super(props);\n        this.state={\n            name: \"\",\n            debitAmount: 0,\n            date: null,\n            remark: \"\",\n            workerNamesFromApi: [],\n            responseMessage: \"\",\n            loadingStatus: {\n              visibility: \"visible\"\n            },\n            loadedStatus: {\n              visibility: \"hidden\"\n            }\n        }\n\n        this.fetchProduct= this.fetchProduct.bind(this);\n        this.onSubmit= this.onSubmit.bind(this);\n        this.toggleLoadStatus= this.toggleLoadStatus.bind(this);\n        \n        this.fetchProduct();\n    }    \n\n    render(){\n        return(\n            <form\n            className=\"form-container form-group\"\n            onSubmit={e => this.onSubmit(e)} >\n              <h3 style={this.state.loadingStatus}>There is no worker currently</h3>\n              <div style={this.state.loadedStatus}>\n                <p className=\"headingViewPart\">Worker Debit Entry</p>\n                <br />\n                <Autocomplete\n                    suggestions={this.state.workerNamesFromApi}\n                    placeholderfrom={\"Worker Name\"}\n                    callbackFromParent= {\n                        dataFromPrent =>{\n                            this.state.name= dataFromPrent\n                        } \n                    }\n                />\n\n                <br/>\n                <br/>\n\n                <InputRateField \n                        placeholderParent=\"Debit Amount\"\n                        callbackFromParent= {\n                        dataFromPrent =>{\n                            this.state.debitAmount= dataFromPrent\n                        } \n                    }\n                />\n\n                <br/>\n                <br/>\n\n                <InputDateField\n                    callbackFromParent= {\n                        dataFromPrent =>{\n                            this.state.date= dataFromPrent\n                        } \n                    }\n                />\n\n                <br/>\n                <br/>          \n\n                <InputRemarkField \n                    callbackFromParent= {\n                        dataFromPrent =>{\n                            this.state.remark= dataFromPrent\n                        } \n                    }\n                />\n                <p>{this.state.responseMessage}</p>\n                <button\n                type=\"submit\"\n                className=\"btn btn-outline-dark\"\n                >\n                Save\n                </button>\n              </div>  \n            </form>\n            \n        );\n    };\n}\n\nexport default WorkerDebit;"]},"metadata":{},"sourceType":"module"}