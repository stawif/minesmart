{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/minesmart/frontend/src/components/account/AllTransactions.js\";\nimport React from 'react';\nimport './account.css';\n\nclass AllTransactions extends React.Component {\n  // Fetch machine list from server\n  // Set final showing rows of table currentWork\n  // Return color for row\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      const responseTransactionList = await fetch(\"http://127.0.0.1:8000/account-detail/\");\n      const jsonTransactionDetail = await responseTransactionList.json();\n      console.log(jsonTransactionDetail);\n\n      if (jsonTransactionDetail.length != 0) {\n        this.setState({\n          minDate: jsonTransactionDetail[0].date\n        });\n        this.setState({\n          maxDate: jsonTransactionDetail.slice(-1)[0].date\n        });\n        console.log(this.state.minDate, this.state.maxDate);\n      }\n\n      this.setState({\n        creditDetail: jsonTransactionDetail\n      });\n    };\n\n    this.setDateFilter = (item, index) => {\n      if (!this.state.minFilterDate) {\n        this.state.minFilterDate = this.state.minDate;\n      }\n\n      if (!this.state.maxFilterDate) {\n        this.state.maxFilterDate = this.state.maxDate;\n      }\n\n      if (this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate) {\n        this.state.currentTransaction.push(item);\n      }\n    };\n\n    this.returnRowColor = category => {\n      if (category === \"machine_party\") {\n        return \"bg-primary\";\n      } else if (category === \"vehicle_party\") {\n        return \"bg-success\";\n      } else if (category === \"daily_work\") {\n        return \"bg-info\";\n      }\n    };\n\n    this.state = {\n      creditDetail: [],\n      minDate: null,\n      maxDate: null,\n      minFilterDate: null,\n      maxFilterDate: null,\n      currentTransaction: []\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.setDateFilter = this.setDateFilter.bind(this);\n    this.returnRowColor = this.returnRowColor.bind(this);\n    this.fetchProduct();\n  }\n\n  render() {\n    //Clear currentTransaction list\n    this.state.currentTransaction = []; //Apply date filter\n\n    this.state.creditDetail.forEach(this.setDateFilter);\n    return React.createElement(\"div\", {\n      id: \"mainDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dateFilter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fromDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          minFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"toDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          maxFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))), React.createElement(\"table\", {\n      className: \"table table-borderd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Category\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Transaction Amount\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Remark\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.currentTransaction.map(credit => React.createElement(\"tr\", {\n      className: this.returnRowColor(credit.category),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, credit.category), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, credit.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, credit.credit_amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, credit.remark))))));\n  }\n\n}\n\nexport default AllTransactions;","map":{"version":3,"sources":["/Users/ashokbatesar/minesmart/frontend/src/components/account/AllTransactions.js"],"names":["React","AllTransactions","Component","constructor","props","fetchProduct","responseTransactionList","fetch","jsonTransactionDetail","json","console","log","length","setState","minDate","date","maxDate","slice","state","creditDetail","setDateFilter","item","index","minFilterDate","maxFilterDate","currentTransaction","push","returnRowColor","category","bind","render","forEach","e","target","value","map","credit","credit_amount","remark"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAEA,MAAMC,eAAN,SAA8BD,KAAK,CAACE,SAApC,CAA6C;AACzC;AAwBA;AAgBA;AAYAC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAnDlBC,YAmDkB,GAnDH,YAAY;AACvB,YAAMC,uBAAuB,GAAG,MAAMC,KAAK,CAAC,uCAAD,CAA3C;AACA,YAAMC,qBAAqB,GAAG,MAAMF,uBAAuB,CAACG,IAAxB,EAApC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,qBAAZ;;AAGA,UAAGA,qBAAqB,CAACI,MAAtB,IAA8B,CAAjC,EACA;AACI,aAAKC,QAAL,CAAc;AACVC,UAAAA,OAAO,EAAEN,qBAAqB,CAAC,CAAD,CAArB,CAAyBO;AADxB,SAAd;AAGA,aAAKF,QAAL,CAAc;AACVG,UAAAA,OAAO,EAAER,qBAAqB,CAACS,KAAtB,CAA4B,CAAC,CAA7B,EAAgC,CAAhC,EAAmCF;AADlC,SAAd;AAIAL,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKO,KAAL,CAAWJ,OAAvB,EAAgC,KAAKI,KAAL,CAAWF,OAA3C;AAEH;;AACD,WAAKH,QAAL,CAAc;AACVM,QAAAA,YAAY,EAAEX;AADJ,OAAd;AAGH,KA8BiB;;AAAA,SA3BlBY,aA2BkB,GA3BF,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B,UAAG,CAAC,KAAKJ,KAAL,CAAWK,aAAf,EAA6B;AACzB,aAAKL,KAAL,CAAWK,aAAX,GAA0B,KAAKL,KAAL,CAAWJ,OAArC;AACH;;AACD,UAAG,CAAC,KAAKI,KAAL,CAAWM,aAAf,EAA6B;AACzB,aAAKN,KAAL,CAAWM,aAAX,GAA0B,KAAKN,KAAL,CAAWF,OAArC;AACH;;AACD,UAAG,KAAKE,KAAL,CAAWK,aAAX,IAA4BF,IAAI,CAACN,IAAjC,IAAyCM,IAAI,CAACN,IAAL,IAAa,KAAKG,KAAL,CAAWM,aAApE,EAAkF;AAC9E,aAAKN,KAAL,CAAWO,kBAAX,CAA8BC,IAA9B,CAAmCL,IAAnC;AACH;AACJ,KAiBiB;;AAAA,SAXlBM,cAWkB,GAXAC,QAAD,IAAa;AAC1B,UAAGA,QAAQ,KAAK,eAAhB,EAAgC;AAC5B,eAAO,YAAP;AACH,OAFD,MAGK,IAAGA,QAAQ,KAAK,eAAhB,EAAgC;AACjC,eAAO,YAAP;AACH,OAFI,MAGA,IAAGA,QAAQ,KAAK,YAAhB,EAA6B;AAC9B,eAAO,SAAP;AACH;AACJ,KACiB;;AAEd,SAAKV,KAAL,GAAY;AACRC,MAAAA,YAAY,EAAE,EADN;AAERL,MAAAA,OAAO,EAAE,IAFD;AAGRE,MAAAA,OAAO,EAAE,IAHD;AAIRO,MAAAA,aAAa,EAAE,IAJP;AAKRC,MAAAA,aAAa,EAAE,IALP;AAMRC,MAAAA,kBAAkB,EAAE;AANZ,KAAZ;AASA,SAAKpB,YAAL,GAAmB,KAAKA,YAAL,CAAkBwB,IAAlB,CAAuB,IAAvB,CAAnB;AACA,SAAKT,aAAL,GAAoB,KAAKA,aAAL,CAAmBS,IAAnB,CAAwB,IAAxB,CAApB;AACA,SAAKF,cAAL,GAAqB,KAAKA,cAAL,CAAoBE,IAApB,CAAyB,IAAzB,CAArB;AAEA,SAAKxB,YAAL;AACH;;AAEDyB,EAAAA,MAAM,GAAE;AACJ;AACA,SAAKZ,KAAL,CAAWO,kBAAX,GAA+B,EAA/B,CAFI,CAIJ;;AACA,SAAKP,KAAL,CAAWC,YAAX,CAAwBY,OAAxB,CAAgC,KAAKX,aAArC;AACA,WACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWJ,OAAnC;AAA4C,MAAA,GAAG,EAAE,KAAKI,KAAL,CAAWF,OAA5D;AAAqE,MAAA,QAAQ,EAAEgB,CAAC,IAAI;AAChF,aAAKnB,QAAL,CAAc;AACVU,UAAAA,aAAa,EAAES,CAAC,CAACC,MAAF,CAASC;AADd,SAAd;AAGH,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAQI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAE,KAAKhB,KAAL,CAAWJ,OAAnC;AAA4C,MAAA,GAAG,EAAE,KAAKI,KAAL,CAAWF,OAA5D;AAAqE,MAAA,QAAQ,EAAEgB,CAAC,IAAI;AAChF,aAAKnB,QAAL,CAAc;AACVW,UAAAA,aAAa,EAAEQ,CAAC,CAACC,MAAF,CAASC;AADd,SAAd;AAGH,OAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,CADJ,EAiBI;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKhB,KAAL,CAAWO,kBAAX,CAA8BU,GAA9B,CAAmCC,MAAD,IAC/B;AAAI,MAAA,SAAS,EAAE,KAAKT,cAAL,CAAoBS,MAAM,CAACR,QAA3B,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKQ,MAAM,CAACR,QAAZ,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKQ,MAAM,CAACrB,IAAZ,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKqB,MAAM,CAACC,aAAZ,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,MAAM,CAACE,MAAZ,CAJJ,CADH,CADL,CATJ,CAjBJ,CADJ;AAwCH;;AArHwC;;AAwH7C,eAAerC,eAAf","sourcesContent":["import React from 'react';\nimport './account.css';\n\nclass AllTransactions extends React.Component{\n    // Fetch machine list from server\n    fetchProduct = async () => {\n        const responseTransactionList = await fetch(\"http://127.0.0.1:8000/account-detail/\" );\n        const jsonTransactionDetail = await responseTransactionList.json();\n        console.log(jsonTransactionDetail);\n        \n\n        if(jsonTransactionDetail.length!=0)\n        {\n            this.setState({\n                minDate: jsonTransactionDetail[0].date\n            });\n            this.setState({\n                maxDate: jsonTransactionDetail.slice(-1)[0].date    \n            });\n            \n            console.log(this.state.minDate, this.state.maxDate);\n            \n        } \n        this.setState({\n            creditDetail: jsonTransactionDetail\n        });\n    };\n\n    // Set final showing rows of table currentWork\n    setDateFilter = (item, index) => {\n        if(!this.state.minFilterDate){\n            this.state.minFilterDate= this.state.minDate;\n        }\n        if(!this.state.maxFilterDate){\n            this.state.maxFilterDate= this.state.maxDate;\n        }\n        if(this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate){\n            this.state.currentTransaction.push(item);\n        }\n    }\n\n    \n    \n\n    // Return color for row\n    returnRowColor = (category) =>{\n        if(category === \"machine_party\"){\n            return \"bg-primary\"\n        }\n        else if(category === \"vehicle_party\"){\n            return \"bg-success\"\n        }\n        else if(category === \"daily_work\"){\n            return \"bg-info\"\n        }\n    }\n    constructor(props){\n        super(props);\n        this.state= {\n            creditDetail: [],\n            minDate: null,\n            maxDate: null,\n            minFilterDate: null,\n            maxFilterDate: null,\n            currentTransaction: []\n        }\n\n        this.fetchProduct= this.fetchProduct.bind(this);\n        this.setDateFilter= this.setDateFilter.bind(this);\n        this.returnRowColor= this.returnRowColor.bind(this);\n\n        this.fetchProduct();\n    }\n\n    render(){\n        //Clear currentTransaction list\n        this.state.currentTransaction= [];\n        \n        //Apply date filter\n        this.state.creditDetail.forEach(this.setDateFilter);\n        return(\n            <div id=\"mainDiv\">\n                <div className=\"dateFilter\">\n                    <div className=\"fromDate\">\n                        <input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {\n                            this.setState({\n                                minFilterDate: e.target.value\n                            });\n                        }}/>\n                    </div>\n                    <div className=\"toDate\">\n                        <input type=\"date\" min={this.state.minDate} max={this.state.maxDate} onChange={e => {\n                            this.setState({\n                                maxFilterDate: e.target.value\n                            });\n                        }}/>\n                    </div>\n                </div>\n                <table className=\"table table-borderd\">\n                    <thead className=\"thead-dark\">\n                        <tr>\n                            <th>Category</th>\n                            <th>Date</th>\n                            <th>Transaction Amount</th>\n                            <th>Remark</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.currentTransaction.map((credit) => (\n                            <tr className={this.returnRowColor(credit.category)}>\n                                <td>{credit.category}</td>\n                                <td>{credit.date}</td>\n                                <td>{credit.credit_amount}</td>\n                                <td>{credit.remark}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>    \n        );\n    }\n}\n\nexport default AllTransactions;"]},"metadata":{},"sourceType":"module"}