{"ast":null,"code":"var _jsxFileName = \"/Users/ashokbatesar/minesmart/frontend/src/components/account/AllTransactions.js\";\nimport React from \"react\";\nimport \"./account.css\";\n\nclass AllTransactions extends React.Component {\n  // Fetch machine list from server\n  // Set final showing rows of table currentWork\n  // Return color for row\n  constructor(props) {\n    super(props);\n\n    this.fetchProduct = async () => {\n      const responseTransactionList = await fetch(\"http://127.0.0.1:8000/account-detail/\");\n      const jsonTransactionDetail = await responseTransactionList.json();\n      console.log(jsonTransactionDetail);\n\n      if (jsonTransactionDetail.length != 0) {\n        this.setState({\n          minDate: jsonTransactionDetail[0].date\n        });\n        this.setState({\n          maxDate: jsonTransactionDetail.slice(-1)[0].date\n        });\n      }\n\n      this.setState({\n        transactionDetail: jsonTransactionDetail\n      });\n    };\n\n    this.setDateFilter = (item, index) => {\n      if (!this.state.minFilterDate) {\n        this.state.minFilterDate = this.state.minDate;\n      }\n\n      if (!this.state.maxFilterDate) {\n        this.state.maxFilterDate = this.state.maxDate;\n      }\n\n      if (this.state.minFilterDate <= item.date && item.date <= this.state.maxFilterDate) {\n        this.state.currentTransaction.push(item);\n      }\n    };\n\n    this.returnRowColor = category => {\n      if (category === \"part_debit\" || category === \"owner_debit\" || category === \"daily_expense_debit\" || category === \"worker_debit\") {\n        return \"bg-danger\";\n      } else if (category === \"daily_work\") {\n        return \"bg-success\";\n      }\n    };\n\n    this.state = {\n      transactionDetail: [],\n      minDate: null,\n      maxDate: null,\n      minFilterDate: null,\n      maxFilterDate: null,\n      currentTransaction: []\n    };\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.setDateFilter = this.setDateFilter.bind(this);\n    this.returnRowColor = this.returnRowColor.bind(this);\n    this.fetchProduct();\n  }\n\n  render() {\n    //Clear currentTransaction list\n    this.state.currentTransaction = []; //Apply date filter\n\n    this.state.transactionDetail.forEach(this.setDateFilter);\n    return React.createElement(\"div\", {\n      id: \"mainDiv\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dateFilter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"fromDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          minFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"toDate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"date\",\n      min: this.state.minDate,\n      max: this.state.maxDate,\n      onChange: e => {\n        this.setState({\n          maxFilterDate: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(\"table\", {\n      className: \"table table-borderd\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      className: \"thead-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Transaction Amount\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Remark\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.currentTransaction.map(transaction => React.createElement(\"tr\", {\n      className: this.returnRowColor(transaction.category),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, transaction.date), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"+ \" + transaction.credit_amount, \"- \" + transaction.debit_amount), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, transaction.remark))))));\n  }\n\n}\n\nexport default AllTransactions;","map":{"version":3,"sources":["/Users/ashokbatesar/minesmart/frontend/src/components/account/AllTransactions.js"],"names":["React","AllTransactions","Component","constructor","props","fetchProduct","responseTransactionList","fetch","jsonTransactionDetail","json","console","log","length","setState","minDate","date","maxDate","slice","transactionDetail","setDateFilter","item","index","state","minFilterDate","maxFilterDate","currentTransaction","push","returnRowColor","category","bind","render","forEach","e","target","value","map","transaction","credit_amount","debit_amount","remark"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./account.css\";\n\nclass AllTransactions extends React.Component {\n  // Fetch machine list from server\n  fetchProduct = async () => {\n    const responseTransactionList = await fetch(\n      \"http://127.0.0.1:8000/account-detail/\"\n    );\n    const jsonTransactionDetail = await responseTransactionList.json();\n    console.log(jsonTransactionDetail);\n\n    if (jsonTransactionDetail.length != 0) {\n      this.setState({\n        minDate: jsonTransactionDetail[0].date\n      });\n      this.setState({\n        maxDate: jsonTransactionDetail.slice(-1)[0].date\n      });\n    }\n    this.setState({\n      transactionDetail: jsonTransactionDetail\n    });\n  };\n\n  // Set final showing rows of table currentWork\n  setDateFilter = (item, index) => {\n    if (!this.state.minFilterDate) {\n      this.state.minFilterDate = this.state.minDate;\n    }\n    if (!this.state.maxFilterDate) {\n      this.state.maxFilterDate = this.state.maxDate;\n    }\n    if (\n      this.state.minFilterDate <= item.date &&\n      item.date <= this.state.maxFilterDate\n    ) {\n      this.state.currentTransaction.push(item);\n    }\n  };\n\n  // Return color for row\n  returnRowColor = category => {\n    if (category === \"part_debit\" || category === \"owner_debit\" || category === \"daily_expense_debit\" || category === \"worker_debit\") {\n      return \"bg-danger\";\n    } else if (category === \"daily_work\") {\n      return \"bg-success\";\n    }\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      transactionDetail: [],\n      minDate: null,\n      maxDate: null,\n      minFilterDate: null,\n      maxFilterDate: null,\n      currentTransaction: []\n    };\n\n    this.fetchProduct = this.fetchProduct.bind(this);\n    this.setDateFilter = this.setDateFilter.bind(this);\n    this.returnRowColor = this.returnRowColor.bind(this);\n\n    this.fetchProduct();\n  }\n\n  render() {\n    //Clear currentTransaction list\n    this.state.currentTransaction = [];\n\n    //Apply date filter\n    this.state.transactionDetail.forEach(this.setDateFilter);\n    return (\n      <div id=\"mainDiv\">\n        <div className=\"dateFilter\">\n          <div className=\"fromDate\">\n            <input\n              type=\"date\"\n              min={this.state.minDate}\n              max={this.state.maxDate}\n              onChange={e => {\n                this.setState({\n                  minFilterDate: e.target.value\n                });\n              }}\n            />\n          </div>\n          <div className=\"toDate\">\n            <input\n              type=\"date\"\n              min={this.state.minDate}\n              max={this.state.maxDate}\n              onChange={e => {\n                this.setState({\n                  maxFilterDate: e.target.value\n                });\n              }}\n            />\n          </div>\n        </div>\n        <table className=\"table table-borderd\">\n          <thead className=\"thead-dark\">\n            <tr>\n              {/* <th>Category</th> */}\n              <th>Date</th>\n              <th>Transaction Amount</th>\n              <th>Remark</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.currentTransaction.map(transaction => (\n              <tr className={this.returnRowColor(transaction.category)}>\n                {/* <td>{transaction.category}</td> */}\n                <td>{transaction.date}</td>\n                <td>{\"+ \"+ transaction.credit_amount}{ \"- \"+transaction.debit_amount}</td>\n                <td>{transaction.remark}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default AllTransactions;\n"]},"metadata":{},"sourceType":"module"}